{"version":3,"sources":["db.png","visa.png","master.png","components/Header.jsx","components/Home.jsx","components/About.jsx","components/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","style","textDecoration","fontWeight","color","Component","Home","About","src","DB","alt","width","Search","state","stopName","origin","id","result","handleInput","event","preventDefault","setState","shortid","generate","target","name","value","handleSubmit","props","searchObj","filter","flight","forceUpdate","console","log","onSubmit","this","type","onChange","placeholder","map","trip","key","detailsId","dateTime","track","App","registeration","hasErrors","trips","pushNewObject","info","push","deleteElement","registerationArray","element","number","componentDidMount","fetch","then","res","json","isLoaded","padding","Fragment","path","exact","component","Visa","Master","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c17d6275.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/db.b5c90ed6.png\";","module.exports = __webpack_public_path__ + \"static/media/visa.f3de8a82.png\";","module.exports = __webpack_public_path__ + \"static/media/master.fe807bce.png\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nexport class Header extends Component {\n  render() {\n    return (\n      <div className=\"nav d-flex justify-content-center mainRed p-1\">\n        <Link to=\"/\" style={{ textDecoration: \"none\", fontWeight: \"bold\" }}>\n          <span className=\"text-white nav-link\">Home</span>\n        </Link>\n        <Link\n          to=\"/about\"\n          style={{ textDecoration: \"none\", fontWeight: \"bold\" }}\n        >\n          <span className=\"text-white nav-link\" style={{ color: \"red\" }}>\n            About\n          </span>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nexport class Home extends Component {\n  render() {\n    return <div></div>;\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport DB from \"../db.png\";\nexport class About extends Component {\n  render() {\n    return (\n      <div className=\"bg-light p-4 mb-4\">\n        <h3>About</h3>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloribus\n          accusantium unde consequatur aperiam, illum sequi. Totam veritatis\n          corrupti deleniti illum.\n        </p>\n        <img src={DB} alt=\"db\" width=\"50%\" />\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nexport class Search extends Component {\n  state = {\n    stopName: \"\", // I changed this\n    origin: \"\", // I changed this\n    id: \"\",\n    result: []\n  };\n  //   input\n  handleInput = event => {\n    event.preventDefault();\n\n    this.setState({\n      id: shortid.generate(),\n      [event.target.name]: event.target.value\n    });\n  };\n  //   submit\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const result = this.props.searchObj.filter(\n      flight =>\n        flight.stopName === this.state.stopName &&\n        flight.origin === this.state.origin\n    );\n    this.setState({\n      result: result\n    });\n    this.forceUpdate();\n    console.log(result);\n    this.setState({\n      stopName: \"\",\n      origin: \"\"\n    });\n  };\n  render() {\n    return (\n      <div>\n        <form className=\"form-group row\" onSubmit={this.handleSubmit}>\n          <div className=\"row m-auto \">\n            <div className=\"col-lg-5 col-sm-12\">\n              <input\n                type=\"text\"\n                name=\"stopName\" // I changed this\n                value={this.state.stopName} // stopName is a property in api object\n                onChange={this.handleInput}\n                className=\"form-group border border-dark\"\n                placeholder=\"From\"\n              />\n            </div>\n            <div className=\"col-lg-5 col-sm-12\">\n              <input\n                type=\"text\"\n                name=\"origin\" // I changed this\n                value={this.state.origin} // origin is a property in api object\n                onChange={this.handleInput}\n                className=\"form-group border border-dark\"\n                placeholder=\"To\"\n              />\n            </div>\n            <div className=\"col-lg-2\">\n              <button type=\"submit\" className=\"btn mainRed text-white\">\n                Search\n              </button>\n            </div>\n          </div>\n        </form>\n        <table className=\"table table-bordered \">\n          <thead className=\"bg-dark text-white\">\n            {/*  I changed this */}\n            <tr>\n              <th>Type</th>\n              <th>From</th>\n              <th>Date</th>\n              <th>To</th>\n              <th>Track</th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-light\">\n            {/*  I changed this */}\n            {this.state.result.map(trip => (\n              <tr key={trip.detailsId}>\n                <td>{trip.type}</td>\n                <td>{trip.stopName}</td>\n                <td>{trip.dateTime}</td>\n                <td>{trip.origin}</td>\n                <td>{trip.track}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n//import Register from \"./components/Register\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport DB from \"./db.png\";\nimport Visa from \"./visa.png\";\nimport Master from \"./master.png\";\nimport Search from \"./components/Search\";\nexport class App extends Component {\n  state = {\n    registeration: [],\n    hasErrors: false,\n    trips: [] // Api\n  };\n  // push new object to registeration\n\n  pushNewObject = info => {\n    this.state.registeration.push(info);\n    this.forceUpdate();\n    console.log(this.state);\n  };\n  //  delete\n  deleteElement = event => {\n    event.preventDefault();\n\n    const registerationArray = this.state.registeration.filter(\n      element => element.number !== event.target.value\n    );\n\n    this.setState({\n      registeration: registerationArray\n    });\n  };\n  // fetch API\n  componentDidMount = () => {\n    fetch(\n      `https://cors-anywhere.herokuapp.com/https://api.deutschebahn.com/freeplan/v1/arrivalBoard/wuppertal?date=2019-11-06`\n    )\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          trips: json\n        });\n      });\n  };\n  // End of Api\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12 p-0 bg-white\">\n              <img\n                src={DB}\n                alt=\"tomas\"\n                width=\"200px\"\n                style={{ padding: \"10px\" }}\n              />\n              <Header />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12  text-center\">\n              <Switch>\n                <React.Fragment>\n                  <Route path=\"/\" exact component={Home} />\n                  <Route path=\"/about\" exact component={About} />\n                </React.Fragment>\n              </Switch>\n            </div>\n          </div>\n          <div className=\"row\">\n            {/* <div className=\"col-lg-4 pt-2\">\n              <h3 className=\"text-center\">Register</h3>\n              <Register referPropsObject={this.pushNewObject} />\n            </div> */}\n            <div className=\"col-12 bg-light text-center p-4\">\n              <div className=\"\">\n                <h3>Where should it go next?</h3>\n                <Search searchObj={this.state.trips} />\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 text-center\">\n              <span>* Currently supports all VISA and MasterCard cards</span>\n              <img src={Visa} alt=\"visa\" width=\"50px\" />\n              <img src={Master} alt=\"master\" width=\"50px\" />\n            </div>\n          </div>\n          <div className=\"row footer  mainRed\">\n            <div className=\"col-12  p-4 text-white text-center\">\n              <p>Copyright © 2019. Tomas Cook, All rights reserved.</p>\n            </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}